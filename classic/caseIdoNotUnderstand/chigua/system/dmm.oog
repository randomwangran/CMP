/*--------------------------------*- C++ -*----------------------------------*\ | ========= | | | \\ / F ield | OpenFOAM: The Open Source CFD Toolbox | | \\ / O peration | Version: 2.4.0 | | \\ / A nd | Web: www.OpenFOAM.org | | \\/ M anipulation | | \*---------------------------------------------------------------------------*/ FoamFile { version 2.0; format ascii; class dictionary; location "system"; object controlDict; } // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // application pimpleFoam; startFrom startTime; startTime 0; stopAt endTime; endTime 30; deltaT 0.00075; writeControl timeStep;//adjustableRunTime; writeInterval 2000; purgeWrite 0; writeFormat ascii; writePrecision 6; writeCompression off; timeFormat general; timePrecision 6; runTimeModifiable true; //adjustTimeStep yes; //maxCo 2; //maxDeltaT 1.0e-2; // ************************************************************************* // functions { #include "forceCoeffs" #includeFunc yPlus #includeFunc residuals } /*--------------------------------*- C++ -*----------------------------------*\ | ========= | | | \\ / F ield | OpenFOAM: The Open Source CFD Toolbox | | \\ / O peration | Version: 5 | | \\ / A nd | Web: www.OpenFOAM.org | | \\/ M anipulation | | \*---------------------------------------------------------------------------*/ FoamFile { version 2.0; format ascii; class dictionary; location "system"; object decomposeParDict; } // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // numberOfSubdomains 16; method scotch; simpleCoeffs { n (2 2 1); delta 0.001; } hierarchicalCoeffs { n (1 1 1); delta 0.001; order xyz; } manualCoeffs { dataFile ""; } distributed no; roots ( ); // ************************************************************************* // /*--------------------------------*- C++ -*----------------------------------*\ | ========= | | | \\ / F ield | OpenFOAM: The Open Source CFD Toolbox | | \\ / O peration | Version: 5 | | \\ / A nd | Web: www.OpenFOAM.org | | \\/ M anipulation | | \*---------------------------------------------------------------------------*/ forceCoeffs1 { type forceCoeffs; libs ("libforces.so"); writeControl timeStep;//adjustableRunTime; writeInterval 20; log yes; patches ("cylinderwalls"); rho rhoInf; rhoInf 1; liftDir (0 1 0); dragDir (1 0 0); CofR (0 0 0); pitchAxis (0 0 1); magUInf 1; lRef 0.11; Aref 0.0363; /* binData { nBin 20; // output data into 20 bins direction (1 0 0); // bin direction cumulative yes; } */ } // ************************************************************************* // /*--------------------------------*- C++ -*----------------------------------*\ | ========= | | | \\ / F ield | OpenFOAM: The Open Source CFD Toolbox | | \\ / O peration | Version: 2.4.0 | | \\ / A nd | Web: www.OpenFOAM.org | | \\/ M anipulation | | \*---------------------------------------------------------------------------*/ FoamFile { version 2.0; format ascii; class dictionary; location "system"; object fvSchemes; } // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // ddtSchemes { default backward; } gradSchemes //tidu { default Gauss linear; grad(U) cellLimited Gauss linear 0.5; } divSchemes //sandu { default none; div(phi,U) Gauss linear; div(phi,k) Gauss limitedLinear 1; div(phi,nut) Gauss limitedLinear 1; div((nuEff*dev2(T(grad(U))))) Gauss linear; } laplacianSchemes { default Gauss linear limited corrected 0.5; } interpolationSchemes { default linear; } snGradSchemes { default limited corrected 0.5; } wallDist { method meshWave; } // ************************************************************************* // /*--------------------------------*- C++ -*----------------------------------*\ | ========= | | | \\ / F ield | OpenFOAM: The Open Source CFD Toolbox | | \\ / O peration | Version: 2.4.0 | | \\ / A nd | Web: www.OpenFOAM.org | | \\/ M anipulation | | \*---------------------------------------------------------------------------*/ FoamFile { version 2.0; format ascii; class dictionary; location "system"; object fvSolution; } // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // solvers { p { solver GAMG; tolerance 1e-04; relTol 0; smoother GaussSeidel; cacheAgglomeration true; nCellsInCoarsestLevel 500; agglomerator faceAreaPair; mergeLevels 1; } pFinal { $p; smoother DICGaussSeidel; tolerance 1e-06; relTol 0; cacheAgglomeration true; nCellsInCoarsestLevel 500; agglomerator faceAreaPair; mergeLevels 1; } "(U|k|nut)" { solver smoothSolver; smoother symGaussSeidel; tolerance 1e-05; relTol 0; } "(U|k|nut)Final" { $U; tolerance 1e-06; relTol 0; } } PIMPLE { nOuterCorrectors 5; nCorrectors 2; nNonOrthogonalCorrectors 1; pRefCell 0; pRefValue 0; /* residualControl { "(U|k|p)" { relTol 0; tolerance 0.00001; } } */ } relaxationFactors { equations { "U.*" 1; "k.*" 1; "nuTilda.*" 1; } } // ************************************************************************* //
